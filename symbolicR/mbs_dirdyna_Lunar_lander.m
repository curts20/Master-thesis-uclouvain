%
%-------------------------------------------------------------
%
%	ROBOTRAN - Version 6.6 (build : february 22, 2008)
%
%	Copyright 
%	Universite catholique de Louvain 
%	Departement de Mecanique 
%	Unite de Production Mecanique et Machines 
%	2, Place du Levant 
%	1348 Louvain-la-Neuve 
%	http://www.robotran.be// 
%
%	==> Generation Date : Wed Nov  7 19:28:00 2018
%
%	==> Project name : Lunar_lander
%	==> using XML input file 
%
%	==> Number of joints : 14
%
%	==> Function : F 1 : Direct Dynamics (Semi-Explicit formulation) : RNEA
%	==> Flops complexity : 2285
%
%	==> Generation Time :  0.020 seconds
%	==> Post-Processing :  0.040 seconds
%
%-------------------------------------------------------------
%
function [M,c] = dirdyna(s,tsim,usrfun)

 M = zeros(14,14);
 c = zeros(14,1);

q = s.q; 
qd = s.qd; 
qdd = s.qdd; 
frc = s.frc; 
trq = s.trq; 

% === begin imp_aux === 

% === end imp_aux === 

% ===== BEGIN task 0 ===== 

% = = Block_0_0_0_0_0_1 = = 
 
% Trigonometric Variables  

  C4 = cos(q(4));
  S4 = sin(q(4));
  C5 = cos(q(5));
  S5 = sin(q(5));
  C6 = cos(q(6));
  S6 = sin(q(6));

% = = Block_0_0_0_0_0_2 = = 
 
% Trigonometric Variables  

  C7 = cos(q(7));
  S7 = sin(q(7));
  C8 = cos(q(8));
  S8 = sin(q(8));

% = = Block_0_0_0_0_0_3 = = 
 
% Trigonometric Variables  

  C9 = cos(q(9));
  S9 = sin(q(9));
  C10 = cos(q(10));
  S10 = sin(q(10));

% = = Block_0_0_0_0_0_4 = = 
 
% Trigonometric Variables  

  C11 = cos(q(11));
  S11 = sin(q(11));
  C12 = cos(q(12));
  S12 = sin(q(12));

% = = Block_0_0_0_0_0_5 = = 
 
% Trigonometric Variables  

  C13 = cos(q(13));
  S13 = sin(q(13));
  C14 = cos(q(14));
  S14 = sin(q(14));

% = = Block_0_1_0_0_0_1 = = 
 
% Forward Kinematics 

  AlF24 = -s.g(3)*S4;
  AlF34 = -s.g(3)*C4;
  OM15 = qd(4)*C5;
  OpF15 = -qd(4)*qd(5)*S5;
  OpF35 = qd(4)*qd(5)*C5;
  AlF15 = -AlF34*S5;
  AlF35 = AlF34*C5;
  AlM15_2 = S4*S5;
  AlM35_2 = -S4*C5;
  AlM15_3 = -C4*S5;
  AlM35_3 = C4*C5;
  OM16 = qd(5)*S6+OM15*C6;
  OM26 = qd(5)*C6-OM15*S6;
  OM36 = qd(6)+qd(4)*S5;
  OpF16 = -(qd(6)*OM15*S6-C6*(OpF15+qd(5)*qd(6)));
  OpF26 = -(qd(6)*OM15*C6+S6*(OpF15+qd(5)*qd(6)));
  BS16 = -(OM26*OM26+OM36*OM36);
  BS26 = OM16*OM26;
  BS36 = OM16*OM36;
  BS56 = -(OM16*OM16+OM36*OM36);
  BS66 = OM26*OM36;
  BeF26 = BS26-OpF35;
  BeF46 = BS26+OpF35;
  BeF76 = BS36-OpF26;
  BeF86 = BS66+OpF16;
  AlF16 = AlF15*C6+AlF24*S6;
  AlF26 = -(AlF15*S6-AlF24*C6);
  AlM16_1 = C5*C6;
  AlM26_1 = -C5*S6;
  AlM16_2 = AlM15_2*C6+C4*S6;
  AlM26_2 = -(AlM15_2*S6-C4*C6);
  AlM16_3 = AlM15_3*C6+S4*S6;
  AlM26_3 = -(AlM15_3*S6-S4*C6);
  OpM16_4 = C5*C6;
  OpM26_4 = -C5*S6;

% = = Block_0_1_0_1_0_2 = = 
 
% Forward Kinematics 

  OM27 = qd(7)+OM26;
  OM37 = OM16*S7+OM36*C7;
  OpF17 = C7*(OpF16-qd(7)*OM36)-S7*(OpF35+qd(7)*OM16);
  OpF37 = C7*(OpF35+qd(7)*OM16)+S7*(OpF16-qd(7)*OM36);
  AlF27 = AlF26+BeF46*s.dpt(1,1);
  AlF37 = C7*(AlF35+BeF76*s.dpt(1,1))+S7*(AlF16+BS16*s.dpt(1,1));
  AlM37_1 = AlM16_1*S7+S5*C7;
  AlM37_2 = AlM16_2*S7+AlM35_2*C7;
  AlM37_3 = AlM16_3*S7+AlM35_3*C7;
  OpM17_4 = OpM16_4*C7-S5*S7;
  OpM37_4 = OpM16_4*S7+S5*C7;
  AlM27_4 = s.dpt(1,1)*S5;
  AlM37_4 = -OpM26_4*s.dpt(1,1)*C7;
  OpM17_5 = S6*C7;
  OpM37_5 = S6*S7;
  AlM37_5 = -s.dpt(1,1)*C6*C7;
  OM18 = qd(8)+OM16*C7-OM36*S7;
  OM28 = OM27*C8+OM37*S8;
  OM38 = -(OM27*S8-OM37*C8);
  OpF28 = C8*(OpF26+qd(8)*OM37)+S8*(OpF37-qd(8)*OM27);
  OpM28_4 = OpM26_4*C8+OpM37_4*S8;
  OpM28_5 = OpM37_5*S8+C6*C8;
  OpM28_6 = C7*S8;

% = = Block_0_1_0_1_0_3 = = 
 
% Forward Kinematics 

  OM29 = qd(9)+OM26;
  OM39 = OM16*S9+OM36*C9;
  OpF19 = C9*(OpF16-qd(9)*OM36)-S9*(OpF35+qd(9)*OM16);
  OpF39 = C9*(OpF35+qd(9)*OM16)+S9*(OpF16-qd(9)*OM36);
  AlF29 = AlF26+BS56*s.dpt(2,2);
  AlF39 = C9*(AlF35+BeF86*s.dpt(2,2))+S9*(AlF16+BeF26*s.dpt(2,2));
  AlM39_1 = AlM16_1*S9+S5*C9;
  AlM39_2 = AlM16_2*S9+AlM35_2*C9;
  AlM39_3 = AlM16_3*S9+AlM35_3*C9;
  OpM19_4 = OpM16_4*C9-S5*S9;
  OpM39_4 = OpM16_4*S9+S5*C9;
  AlM39_4 = s.dpt(2,2)*(OpM16_4*C9-S5*S9);
  OpM19_5 = S6*C9;
  OpM39_5 = S6*S9;
  AlM39_5 = s.dpt(2,2)*S6*C9;
  AlM39_6 = -s.dpt(2,2)*S9;
  OM110 = qd(10)+OM16*C9-OM36*S9;
  OM210 = OM29*C10+OM39*S10;
  OM310 = -(OM29*S10-OM39*C10);
  OpF210 = C10*(OpF26+qd(10)*OM39)+S10*(OpF39-qd(10)*OM29);
  OpM210_4 = OpM26_4*C10+OpM39_4*S10;
  OpM210_5 = OpM39_5*S10+C10*C6;
  OpM210_6 = S10*C9;

% = = Block_0_1_0_1_0_4 = = 
 
% Forward Kinematics 

  OM211 = qd(11)+OM26;
  OM311 = OM16*S11+OM36*C11;
  OpF111 = C11*(OpF16-qd(11)*OM36)-S11*(OpF35+qd(11)*OM16);
  OpF311 = C11*(OpF35+qd(11)*OM16)+S11*(OpF16-qd(11)*OM36);
  AlF211 = AlF26+BeF46*s.dpt(1,3);
  AlF311 = C11*(AlF35+BeF76*s.dpt(1,3))+S11*(AlF16+BS16*s.dpt(1,3));
  AlM311_1 = AlM16_1*S11+C11*S5;
  AlM311_2 = AlM16_2*S11+AlM35_2*C11;
  AlM311_3 = AlM16_3*S11+AlM35_3*C11;
  OpM111_4 = OpM16_4*C11-S11*S5;
  OpM311_4 = OpM16_4*S11+C11*S5;
  AlM211_4 = s.dpt(1,3)*S5;
  AlM311_4 = -OpM26_4*s.dpt(1,3)*C11;
  OpM111_5 = C11*S6;
  OpM311_5 = S11*S6;
  AlM311_5 = -s.dpt(1,3)*C11*C6;
  OM112 = qd(12)+OM16*C11-OM36*S11;
  OM212 = OM211*C12+OM311*S12;
  OM312 = -(OM211*S12-OM311*C12);
  OpF212 = C12*(OpF26+qd(12)*OM311)+S12*(OpF311-qd(12)*OM211);
  OpM212_4 = OpM26_4*C12+OpM311_4*S12;
  OpM212_5 = OpM311_5*S12+C12*C6;
  OpM212_6 = C11*S12;

% = = Block_0_1_0_1_0_5 = = 
 
% Forward Kinematics 

  OM213 = qd(13)+OM26;
  OM313 = OM16*S13+OM36*C13;
  OpF113 = C13*(OpF16-qd(13)*OM36)-S13*(OpF35+qd(13)*OM16);
  OpF313 = C13*(OpF35+qd(13)*OM16)+S13*(OpF16-qd(13)*OM36);
  AlF213 = AlF26+BS56*s.dpt(2,4);
  AlF313 = C13*(AlF35+BeF86*s.dpt(2,4))+S13*(AlF16+BeF26*s.dpt(2,4));
  AlM313_1 = AlM16_1*S13+C13*S5;
  AlM313_2 = AlM16_2*S13+AlM35_2*C13;
  AlM313_3 = AlM16_3*S13+AlM35_3*C13;
  OpM113_4 = OpM16_4*C13-S13*S5;
  OpM313_4 = OpM16_4*S13+C13*S5;
  AlM313_4 = s.dpt(2,4)*(OpM16_4*C13-S13*S5);
  OpM113_5 = C13*S6;
  OpM313_5 = S13*S6;
  AlM313_5 = s.dpt(2,4)*C13*S6;
  AlM313_6 = -s.dpt(2,4)*S13;
  OM114 = qd(14)+OM16*C13-OM36*S13;
  OM214 = OM213*C14+OM313*S14;
  OM314 = -(OM213*S14-OM313*C14);
  OpF214 = C14*(OpF26+qd(14)*OM313)+S14*(OpF313-qd(14)*OM213);
  OpM214_4 = OpM26_4*C14+OpM313_4*S14;
  OpM214_5 = OpM313_5*S14+C14*C6;
  OpM214_6 = C13*S14;

% = = Block_0_2_0_1_0_2 = = 
 
% Backward Dynamics 

  FA18 = -(s.frc(1,8)-s.m(8)*(s.l(3,8)*(OpF28+OM18*OM38)+C7*(AlF16+BS16*s.dpt(1,1))-S7*(AlF35+BeF76*s.dpt(1,1))));
  FA28 = -(s.frc(2,8)-s.m(8)*(AlF27*C8+AlF37*S8-s.l(3,8)*(OpF17-OM28*OM38)));
  FA38 = -(s.frc(3,8)+s.m(8)*(AlF27*S8-AlF37*C8+s.l(3,8)*(OM18*OM18+OM28*OM28)));
  CF18 = -(s.trq(1,8)-s.In(1,8)*OpF17+FA28*s.l(3,8)+OM28*OM38*(s.In(5,8)-s.In(9,8)));
  CF28 = -(s.trq(2,8)-s.In(5,8)*OpF28-FA18*s.l(3,8)-OM18*OM38*(s.In(1,8)-s.In(9,8)));
  CF38 = -(s.trq(3,8)-s.In(9,8)*(C8*(OpF37-qd(8)*OM27)-S8*(OpF26+qd(8)*OM37))+OM18*OM28*(s.In(1,8)-s.In(5,8)));
  FB18_1 = s.m(8)*(AlM16_1*C7-S5*S7);
  FB28_1 = s.m(8)*(AlM26_1*C8+AlM37_1*S8);
  FB38_1 = -s.m(8)*(AlM26_1*S8-AlM37_1*C8);
  CM18_1 = -FB28_1*s.l(3,8);
  CM28_1 = FB18_1*s.l(3,8);
  FB18_2 = s.m(8)*(AlM16_2*C7-AlM35_2*S7);
  FB28_2 = s.m(8)*(AlM26_2*C8+AlM37_2*S8);
  FB38_2 = -s.m(8)*(AlM26_2*S8-AlM37_2*C8);
  CM18_2 = -FB28_2*s.l(3,8);
  CM28_2 = FB18_2*s.l(3,8);
  FB18_3 = s.m(8)*(AlM16_3*C7-AlM35_3*S7);
  FB28_3 = s.m(8)*(AlM26_3*C8+AlM37_3*S8);
  FB38_3 = -s.m(8)*(AlM26_3*S8-AlM37_3*C8);
  CM18_3 = -FB28_3*s.l(3,8);
  CM28_3 = FB18_3*s.l(3,8);
  FB18_4 = s.m(8)*(OpM26_4*s.dpt(1,1)*S7+OpM28_4*s.l(3,8));
  FB28_4 = s.m(8)*(AlM27_4*C8+AlM37_4*S8-OpM17_4*s.l(3,8));
  FB38_4 = -s.m(8)*(AlM27_4*S8-AlM37_4*C8);
  CM18_4 = s.In(1,8)*OpM17_4-FB28_4*s.l(3,8);
  CM28_4 = s.In(5,8)*OpM28_4+FB18_4*s.l(3,8);
  CM38_4 = -s.In(9,8)*(OpM26_4*S8-OpM37_4*C8);
  FB18_5 = s.m(8)*(OpM28_5*s.l(3,8)+s.dpt(1,1)*C6*S7);
  FB28_5 = s.m(8)*(AlM37_5*S8-OpM17_5*s.l(3,8));
  FB38_5 = s.m(8)*AlM37_5*C8;
  CM18_5 = s.In(1,8)*OpM17_5-FB28_5*s.l(3,8);
  CM28_5 = s.In(5,8)*OpM28_5+FB18_5*s.l(3,8);
  CM38_5 = s.In(9,8)*(OpM37_5*C8-C6*S8);
  FB28_6 = s.m(8)*(s.dpt(1,1)*C8+s.l(3,8)*S7);
  CM18_6 = -(s.In(1,8)*S7+FB28_6*s.l(3,8));
  CM28_6 = OpM28_6*(s.In(5,8)+s.m(8)*s.l(3,8)*s.l(3,8));
  CM38_6 = s.In(9,8)*C7*C8;
  CM18_8 = s.In(1,8)+s.m(8)*s.l(3,8)*s.l(3,8);
  FF7_28 = FA28*C8-FA38*S8;
  FF7_38 = FA28*S8+FA38*C8;
  CF7_28 = CF28*C8-CF38*S8;
  CF7_38 = CF28*S8+CF38*C8;
  FM71_28 = FB28_1*C8-FB38_1*S8;
  FM71_38 = FB28_1*S8+FB38_1*C8;
  CM71_28 = CM28_1*C8;
  CM71_38 = CM28_1*S8;
  FM72_28 = FB28_2*C8-FB38_2*S8;
  FM72_38 = FB28_2*S8+FB38_2*C8;
  CM72_28 = CM28_2*C8;
  CM72_38 = CM28_2*S8;
  FM73_28 = FB28_3*C8-FB38_3*S8;
  FM73_38 = FB28_3*S8+FB38_3*C8;
  CM73_28 = CM28_3*C8;
  CM73_38 = CM28_3*S8;
  CM74_28 = CM28_4*C8-CM38_4*S8;
  CM74_38 = CM28_4*S8+CM38_4*C8;
  CM75_28 = CM28_5*C8-CM38_5*S8;
  CM75_38 = CM28_5*S8+CM38_5*C8;
  CM76_28 = CM28_6*C8-CM38_6*S8;
  CM77_28 = s.In(9,8)*S8*S8+C8*C8*(s.In(5,8)+s.m(8)*s.l(3,8)*s.l(3,8));

% = = Block_0_2_0_1_0_3 = = 
 
% Backward Dynamics 

  FA110 = -(s.frc(1,10)-s.m(10)*(s.l(3,10)*(OpF210+OM110*OM310)+C9*(AlF16+BeF26*s.dpt(2,2))-S9*(AlF35+BeF86*s.dpt(2,2))));
  FA210 = -(s.frc(2,10)-s.m(10)*(AlF29*C10+AlF39*S10-s.l(3,10)*(OpF19-OM210*OM310)));
  FA310 = -(s.frc(3,10)+s.m(10)*(AlF29*S10-AlF39*C10+s.l(3,10)*(OM110*OM110+OM210*OM210)));
  CF110 = -(s.trq(1,10)-s.In(1,10)*OpF19+FA210*s.l(3,10)+OM210*OM310*(s.In(5,10)-s.In(9,10)));
  CF210 = -(s.trq(2,10)-s.In(5,10)*OpF210-FA110*s.l(3,10)-OM110*OM310*(s.In(1,10)-s.In(9,10)));
  CF310 = -(s.trq(3,10)-s.In(9,10)*(C10*(OpF39-qd(10)*OM29)-S10*(OpF26+qd(10)*OM39))+OM110*OM210*(s.In(1,10)-s.In(5,10)));
  FB110_1 = s.m(10)*(AlM16_1*C9-S5*S9);
  FB210_1 = s.m(10)*(AlM26_1*C10+AlM39_1*S10);
  FB310_1 = -s.m(10)*(AlM26_1*S10-AlM39_1*C10);
  CM110_1 = -FB210_1*s.l(3,10);
  CM210_1 = FB110_1*s.l(3,10);
  FB110_2 = s.m(10)*(AlM16_2*C9-AlM35_2*S9);
  FB210_2 = s.m(10)*(AlM26_2*C10+AlM39_2*S10);
  FB310_2 = -s.m(10)*(AlM26_2*S10-AlM39_2*C10);
  CM110_2 = -FB210_2*s.l(3,10);
  CM210_2 = FB110_2*s.l(3,10);
  FB110_3 = s.m(10)*(AlM16_3*C9-AlM35_3*S9);
  FB210_3 = s.m(10)*(AlM26_3*C10+AlM39_3*S10);
  FB310_3 = -s.m(10)*(AlM26_3*S10-AlM39_3*C10);
  CM110_3 = -FB210_3*s.l(3,10);
  CM210_3 = FB110_3*s.l(3,10);
  FB110_4 = s.m(10)*(OpM210_4*s.l(3,10)-s.dpt(2,2)*(OpM16_4*S9+S5*C9));
  FB210_4 = s.m(10)*(AlM39_4*S10-OpM19_4*s.l(3,10));
  CM110_4 = s.In(1,10)*OpM19_4-FB210_4*s.l(3,10);
  CM210_4 = s.In(5,10)*OpM210_4+FB110_4*s.l(3,10);
  CM310_4 = -s.In(9,10)*(OpM26_4*S10-OpM39_4*C10);
  FB110_5 = s.m(10)*(OpM210_5*s.l(3,10)-s.dpt(2,2)*S6*S9);
  FB210_5 = s.m(10)*(AlM39_5*S10-OpM19_5*s.l(3,10));
  CM110_5 = s.In(1,10)*OpM19_5-FB210_5*s.l(3,10);
  CM210_5 = s.In(5,10)*OpM210_5+FB110_5*s.l(3,10);
  CM310_5 = s.In(9,10)*(OpM39_5*C10-S10*C6);
  FB110_6 = s.m(10)*(OpM210_6*s.l(3,10)-s.dpt(2,2)*C9);
  FB210_6 = s.m(10)*(AlM39_6*S10+s.l(3,10)*S9);
  CM110_6 = -(s.In(1,10)*S9+FB210_6*s.l(3,10));
  CM210_6 = s.In(5,10)*OpM210_6+FB110_6*s.l(3,10);
  CM310_6 = s.In(9,10)*C10*C9;
  CM110_10 = s.In(1,10)+s.m(10)*s.l(3,10)*s.l(3,10);
  FF9_310 = FA210*S10+FA310*C10;
  CF9_210 = CF210*C10-CF310*S10;
  CF9_310 = CF210*S10+CF310*C10;
  FM91_310 = FB210_1*S10+FB310_1*C10;
  CM91_210 = CM210_1*C10;
  CM91_310 = CM210_1*S10;
  FM92_310 = FB210_2*S10+FB310_2*C10;
  CM92_210 = CM210_2*C10;
  CM92_310 = CM210_2*S10;
  FM93_310 = FB210_3*S10+FB310_3*C10;
  CM93_210 = CM210_3*C10;
  CM93_310 = CM210_3*S10;
  FM94_310 = s.m(10)*AlM39_4*C10*C10+FB210_4*S10;
  CM94_210 = CM210_4*C10-CM310_4*S10;
  CM94_310 = CM210_4*S10+CM310_4*C10;
  FM95_310 = s.m(10)*AlM39_5*C10*C10+FB210_5*S10;
  CM95_210 = CM210_5*C10-CM310_5*S10;
  CM95_310 = CM210_5*S10+CM310_5*C10;
  CM96_210 = CM210_6*C10-CM310_6*S10;
  CM99_210 = s.In(9,10)*S10*S10+C10*C10*(s.In(5,10)+s.m(10)*s.l(3,10)*s.l(3,10));

% = = Block_0_2_0_1_0_4 = = 
 
% Backward Dynamics 

  FA112 = -(s.frc(1,12)-s.m(12)*(s.l(3,12)*(OpF212+OM112*OM312)+C11*(AlF16+BS16*s.dpt(1,3))-S11*(AlF35+BeF76*s.dpt(1,3))));
  FA212 = -(s.frc(2,12)-s.m(12)*(AlF211*C12+AlF311*S12-s.l(3,12)*(OpF111-OM212*OM312)));
  FA312 = -(s.frc(3,12)+s.m(12)*(AlF211*S12-AlF311*C12+s.l(3,12)*(OM112*OM112+OM212*OM212)));
  CF112 = -(s.trq(1,12)-s.In(1,12)*OpF111+FA212*s.l(3,12)+OM212*OM312*(s.In(5,12)-s.In(9,12)));
  CF212 = -(s.trq(2,12)-s.In(5,12)*OpF212-FA112*s.l(3,12)-OM112*OM312*(s.In(1,12)-s.In(9,12)));
  CF312 = -(s.trq(3,12)-s.In(9,12)*(C12*(OpF311-qd(12)*OM211)-S12*(OpF26+qd(12)*OM311))+OM112*OM212*(s.In(1,12)-s.In(5,12)));
  FB112_1 = s.m(12)*(AlM16_1*C11-S11*S5);
  FB212_1 = s.m(12)*(AlM26_1*C12+AlM311_1*S12);
  FB312_1 = -s.m(12)*(AlM26_1*S12-AlM311_1*C12);
  CM112_1 = -FB212_1*s.l(3,12);
  CM212_1 = FB112_1*s.l(3,12);
  FB112_2 = s.m(12)*(AlM16_2*C11-AlM35_2*S11);
  FB212_2 = s.m(12)*(AlM26_2*C12+AlM311_2*S12);
  FB312_2 = -s.m(12)*(AlM26_2*S12-AlM311_2*C12);
  CM112_2 = -FB212_2*s.l(3,12);
  CM212_2 = FB112_2*s.l(3,12);
  FB112_3 = s.m(12)*(AlM16_3*C11-AlM35_3*S11);
  FB212_3 = s.m(12)*(AlM26_3*C12+AlM311_3*S12);
  FB312_3 = -s.m(12)*(AlM26_3*S12-AlM311_3*C12);
  CM112_3 = -FB212_3*s.l(3,12);
  CM212_3 = FB112_3*s.l(3,12);
  FB112_4 = s.m(12)*(OpM212_4*s.l(3,12)+OpM26_4*s.dpt(1,3)*S11);
  FB212_4 = s.m(12)*(AlM211_4*C12+AlM311_4*S12-OpM111_4*s.l(3,12));
  FB312_4 = -s.m(12)*(AlM211_4*S12-AlM311_4*C12);
  CM112_4 = s.In(1,12)*OpM111_4-FB212_4*s.l(3,12);
  CM212_4 = s.In(5,12)*OpM212_4+FB112_4*s.l(3,12);
  CM312_4 = -s.In(9,12)*(OpM26_4*S12-OpM311_4*C12);
  FB112_5 = s.m(12)*(OpM212_5*s.l(3,12)+s.dpt(1,3)*S11*C6);
  FB212_5 = s.m(12)*(AlM311_5*S12-OpM111_5*s.l(3,12));
  FB312_5 = s.m(12)*AlM311_5*C12;
  CM112_5 = s.In(1,12)*OpM111_5-FB212_5*s.l(3,12);
  CM212_5 = s.In(5,12)*OpM212_5+FB112_5*s.l(3,12);
  CM312_5 = s.In(9,12)*(OpM311_5*C12-S12*C6);
  FB212_6 = s.m(12)*(s.dpt(1,3)*C12+s.l(3,12)*S11);
  CM112_6 = -(s.In(1,12)*S11+FB212_6*s.l(3,12));
  CM212_6 = OpM212_6*(s.In(5,12)+s.m(12)*s.l(3,12)*s.l(3,12));
  CM312_6 = s.In(9,12)*C11*C12;
  CM112_12 = s.In(1,12)+s.m(12)*s.l(3,12)*s.l(3,12);
  FF11_212 = FA212*C12-FA312*S12;
  FF11_312 = FA212*S12+FA312*C12;
  CF11_212 = CF212*C12-CF312*S12;
  CF11_312 = CF212*S12+CF312*C12;
  FM111_212 = FB212_1*C12-FB312_1*S12;
  FM111_312 = FB212_1*S12+FB312_1*C12;
  CM111_212 = CM212_1*C12;
  CM111_312 = CM212_1*S12;
  FM112_212 = FB212_2*C12-FB312_2*S12;
  FM112_312 = FB212_2*S12+FB312_2*C12;
  CM112_212 = CM212_2*C12;
  CM112_312 = CM212_2*S12;
  FM113_212 = FB212_3*C12-FB312_3*S12;
  FM113_312 = FB212_3*S12+FB312_3*C12;
  CM113_212 = CM212_3*C12;
  CM113_312 = CM212_3*S12;
  CM114_212 = CM212_4*C12-CM312_4*S12;
  CM114_312 = CM212_4*S12+CM312_4*C12;
  CM115_212 = CM212_5*C12-CM312_5*S12;
  CM115_312 = CM212_5*S12+CM312_5*C12;
  CM116_212 = CM212_6*C12-CM312_6*S12;
  CM1111_212 = s.In(9,12)*S12*S12+C12*C12*(s.In(5,12)+s.m(12)*s.l(3,12)*s.l(3,12));

% = = Block_0_2_0_1_0_5 = = 
 
% Backward Dynamics 

  FA114 = -(s.frc(1,14)-s.m(14)*(s.l(3,14)*(OpF214+OM114*OM314)+C13*(AlF16+BeF26*s.dpt(2,4))-S13*(AlF35+BeF86*s.dpt(2,4))));
  FA214 = -(s.frc(2,14)-s.m(14)*(AlF213*C14+AlF313*S14-s.l(3,14)*(OpF113-OM214*OM314)));
  FA314 = -(s.frc(3,14)+s.m(14)*(AlF213*S14-AlF313*C14+s.l(3,14)*(OM114*OM114+OM214*OM214)));
  CF114 = -(s.trq(1,14)-s.In(1,14)*OpF113+FA214*s.l(3,14)+OM214*OM314*(s.In(5,14)-s.In(9,14)));
  CF214 = -(s.trq(2,14)-s.In(5,14)*OpF214-FA114*s.l(3,14)-OM114*OM314*(s.In(1,14)-s.In(9,14)));
  CF314 = -(s.trq(3,14)-s.In(9,14)*(C14*(OpF313-qd(14)*OM213)-S14*(OpF26+qd(14)*OM313))+OM114*OM214*(s.In(1,14)-s.In(5,14)));
  FB114_1 = s.m(14)*(AlM16_1*C13-S13*S5);
  FB214_1 = s.m(14)*(AlM26_1*C14+AlM313_1*S14);
  FB314_1 = -s.m(14)*(AlM26_1*S14-AlM313_1*C14);
  CM114_1 = -FB214_1*s.l(3,14);
  CM214_1 = FB114_1*s.l(3,14);
  FB114_2 = s.m(14)*(AlM16_2*C13-AlM35_2*S13);
  FB214_2 = s.m(14)*(AlM26_2*C14+AlM313_2*S14);
  FB314_2 = -s.m(14)*(AlM26_2*S14-AlM313_2*C14);
  CM114_2 = -FB214_2*s.l(3,14);
  CM214_2 = FB114_2*s.l(3,14);
  FB114_3 = s.m(14)*(AlM16_3*C13-AlM35_3*S13);
  FB214_3 = s.m(14)*(AlM26_3*C14+AlM313_3*S14);
  FB314_3 = -s.m(14)*(AlM26_3*S14-AlM313_3*C14);
  CM114_3 = -FB214_3*s.l(3,14);
  CM214_3 = FB114_3*s.l(3,14);
  FB114_4 = s.m(14)*(OpM214_4*s.l(3,14)-s.dpt(2,4)*(OpM16_4*S13+C13*S5));
  FB214_4 = s.m(14)*(AlM313_4*S14-OpM113_4*s.l(3,14));
  CM114_4 = s.In(1,14)*OpM113_4-FB214_4*s.l(3,14);
  CM214_4 = s.In(5,14)*OpM214_4+FB114_4*s.l(3,14);
  CM314_4 = -s.In(9,14)*(OpM26_4*S14-OpM313_4*C14);
  FB114_5 = s.m(14)*(OpM214_5*s.l(3,14)-s.dpt(2,4)*S13*S6);
  FB214_5 = s.m(14)*(AlM313_5*S14-OpM113_5*s.l(3,14));
  CM114_5 = s.In(1,14)*OpM113_5-FB214_5*s.l(3,14);
  CM214_5 = s.In(5,14)*OpM214_5+FB114_5*s.l(3,14);
  CM314_5 = s.In(9,14)*(OpM313_5*C14-S14*C6);
  FB114_6 = s.m(14)*(OpM214_6*s.l(3,14)-s.dpt(2,4)*C13);
  FB214_6 = s.m(14)*(AlM313_6*S14+s.l(3,14)*S13);
  CM114_6 = -(s.In(1,14)*S13+FB214_6*s.l(3,14));
  CM214_6 = s.In(5,14)*OpM214_6+FB114_6*s.l(3,14);
  CM314_6 = s.In(9,14)*C13*C14;
  CM114_14 = s.In(1,14)+s.m(14)*s.l(3,14)*s.l(3,14);
  FF13_314 = FA214*S14+FA314*C14;
  CF13_214 = CF214*C14-CF314*S14;
  CF13_314 = CF214*S14+CF314*C14;
  FM131_314 = FB214_1*S14+FB314_1*C14;
  CM131_214 = CM214_1*C14;
  CM131_314 = CM214_1*S14;
  FM132_314 = FB214_2*S14+FB314_2*C14;
  CM132_214 = CM214_2*C14;
  CM132_314 = CM214_2*S14;
  FM133_314 = FB214_3*S14+FB314_3*C14;
  CM133_214 = CM214_3*C14;
  CM133_314 = CM214_3*S14;
  FM134_314 = s.m(14)*AlM313_4*C14*C14+FB214_4*S14;
  CM134_214 = CM214_4*C14-CM314_4*S14;
  CM134_314 = CM214_4*S14+CM314_4*C14;
  FM135_314 = s.m(14)*AlM313_5*C14*C14+FB214_5*S14;
  CM135_214 = CM214_5*C14-CM314_5*S14;
  CM135_314 = CM214_5*S14+CM314_5*C14;
  CM136_214 = CM214_6*C14-CM314_6*S14;
  CM1313_214 = s.In(9,14)*S14*S14+C14*C14*(s.In(5,14)+s.m(14)*s.l(3,14)*s.l(3,14));

% = = Block_0_2_0_2_0_1 = = 
 
% Backward Dynamics 

  FA16 = -(s.frc(1,6)-s.m(6)*(AlF16+s.l(3,6)*(BS36+OpF26)));
  FA26 = -(s.frc(2,6)-s.m(6)*(AlF26+s.l(3,6)*(BS66-OpF16)));
  FF16 = FA16+FA110*C9+FA112*C11+FA114*C13+FA18*C7+FF11_312*S11+FF13_314*S13+FF7_38*S7+FF9_310*S9;
  FF26 = FA26+FF11_212+FF7_28+FA210*C10+FA214*C14-FA310*S10-FA314*S14;
  FF36 = -(s.frc(3,6)-s.m(6)*(AlF35-s.l(3,6)*(OM16*OM16+OM26*OM26))+FA110*S9+FA112*S11+FA114*S13+FA18*S7-FF11_312*C11-FF13_314*C13-FF7_38*C7-...
 FF9_310*C9);
  CF16 = -(s.trq(1,6)-s.In(1,6)*OpF16-s.In(2,6)*OpF26-s.In(3,6)*OpF35-CF110*C9-CF112*C11-CF114*C13-CF11_312*S11-CF13_314*S13-CF18*C7-CF7_38*S7-...
 CF9_310*S9+FA26*s.l(3,6)-OM26*(s.In(3,6)*OM16+s.In(6,6)*OM26+s.In(9,6)*OM36)+OM36*(s.In(2,6)*OM16+s.In(5,6)*OM26+s.In(6,6)*OM36)+s.dpt(2,2)*(FA110*S9...
 -FF9_310*C9)+s.dpt(2,4)*(FA114*S13-FF13_314*C13));
  CF26 = -(s.trq(2,6)-CF11_212-CF13_214-CF7_28-CF9_210-s.In(2,6)*OpF16-s.In(5,6)*OpF26-s.In(6,6)*OpF35-FA16*s.l(3,6)+OM16*(s.In(3,6)*OM16+...
 s.In(6,6)*OM26+s.In(9,6)*OM36)-OM36*(s.In(1,6)*OM16+s.In(2,6)*OM26+s.In(3,6)*OM36)-s.dpt(1,1)*(FA18*S7-FF7_38*C7)-s.dpt(1,3)*(FA112*S11-FF11_312*C11)...
 );
  CF36 = -(s.trq(3,6)-s.In(3,6)*OpF16-s.In(6,6)*OpF26-s.In(9,6)*OpF35+CF110*S9+CF112*S11+CF114*S13-CF11_312*C11-CF13_314*C13+CF18*S7-CF7_38*C7-...
 CF9_310*C9-FF11_212*s.dpt(1,3)-FF7_28*s.dpt(1,1)-OM16*(s.In(2,6)*OM16+s.In(5,6)*OM26+s.In(6,6)*OM36)+OM26*(s.In(1,6)*OM16+s.In(2,6)*OM26+s.In(3,6)*...
 OM36)+s.dpt(2,2)*(FA110*C9+FF9_310*S9)+s.dpt(2,4)*(FA114*C13+FF13_314*S13));
  FB16_1 = s.m(6)*AlM16_1;
  FB26_1 = s.m(6)*AlM26_1;
  FM16_1 = FB16_1+FB110_1*C9+FB112_1*C11+FB114_1*C13+FB18_1*C7+FM111_312*S11+FM131_314*S13+FM71_38*S7+FM91_310*S9;
  FM26_1 = FB26_1+FM111_212+FM71_28+FB210_1*C10+FB214_1*C14-FB310_1*S10-FB314_1*S14;
  FM36_1 = s.m(6)*S5-FB110_1*S9-FB112_1*S11-FB114_1*S13-FB18_1*S7+FM111_312*C11+FM131_314*C13+FM71_38*C7+FM91_310*C9;
  CM16_1 = CM110_1*C9+CM111_312*S11+CM112_1*C11+CM114_1*C13+CM131_314*S13+CM18_1*C7+CM71_38*S7+CM91_310*S9-FB26_1*s.l(3,6)-s.dpt(2,2)*(FB110_1*S9...
 -FM91_310*C9)-s.dpt(2,4)*(FB114_1*S13-FM131_314*C13);
  CM26_1 = CM111_212+CM131_214+CM71_28+CM91_210+FB16_1*s.l(3,6)+s.dpt(1,1)*(FB18_1*S7-FM71_38*C7)+s.dpt(1,3)*(FB112_1*S11-FM111_312*C11);
  CM36_1 = -(CM110_1*S9-CM111_312*C11+CM112_1*S11+CM114_1*S13-CM131_314*C13+CM18_1*S7-CM71_38*C7-CM91_310*C9-FM111_212*s.dpt(1,3)-FM71_28*...
 s.dpt(1,1)+s.dpt(2,2)*(FB110_1*C9+FM91_310*S9)+s.dpt(2,4)*(FB114_1*C13+FM131_314*S13));
  FB16_2 = s.m(6)*AlM16_2;
  FB26_2 = s.m(6)*AlM26_2;
  FM16_2 = FB16_2+FB110_2*C9+FB112_2*C11+FB114_2*C13+FB18_2*C7+FM112_312*S11+FM132_314*S13+FM72_38*S7+FM92_310*S9;
  FM26_2 = FB26_2+FM112_212+FM72_28+FB210_2*C10+FB214_2*C14-FB310_2*S10-FB314_2*S14;
  CM16_2 = CM110_2*C9+CM112_2*C11+CM112_312*S11+CM114_2*C13+CM132_314*S13+CM18_2*C7+CM72_38*S7+CM92_310*S9-FB26_2*s.l(3,6)-s.dpt(2,2)*(FB110_2*S9...
 -FM92_310*C9)-s.dpt(2,4)*(FB114_2*S13-FM132_314*C13);
  CM26_2 = CM112_212+CM132_214+CM72_28+CM92_210+FB16_2*s.l(3,6)+s.dpt(1,1)*(FB18_2*S7-FM72_38*C7)+s.dpt(1,3)*(FB112_2*S11-FM112_312*C11);
  CM36_2 = -(CM110_2*S9+CM112_2*S11-CM112_312*C11+CM114_2*S13-CM132_314*C13+CM18_2*S7-CM72_38*C7-CM92_310*C9-FM112_212*s.dpt(1,3)-FM72_28*...
 s.dpt(1,1)+s.dpt(2,2)*(FB110_2*C9+FM92_310*S9)+s.dpt(2,4)*(FB114_2*C13+FM132_314*S13));
  FB16_3 = s.m(6)*AlM16_3;
  FB26_3 = s.m(6)*AlM26_3;
  FM16_3 = FB16_3+FB110_3*C9+FB112_3*C11+FB114_3*C13+FB18_3*C7+FM113_312*S11+FM133_314*S13+FM73_38*S7+FM93_310*S9;
  FM26_3 = FB26_3+FM113_212+FM73_28+FB210_3*C10+FB214_3*C14-FB310_3*S10-FB314_3*S14;
  CM16_3 = CM110_3*C9+CM112_3*C11+CM113_312*S11+CM114_3*C13+CM133_314*S13+CM18_3*C7+CM73_38*S7+CM93_310*S9-FB26_3*s.l(3,6)-s.dpt(2,2)*(FB110_3*S9...
 -FM93_310*C9)-s.dpt(2,4)*(FB114_3*S13-FM133_314*C13);
  CM26_3 = CM113_212+CM133_214+CM73_28+CM93_210+FB16_3*s.l(3,6)+s.dpt(1,1)*(FB18_3*S7-FM73_38*C7)+s.dpt(1,3)*(FB112_3*S11-FM113_312*C11);
  CM36_3 = -(CM110_3*S9+CM112_3*S11-CM113_312*C11+CM114_3*S13-CM133_314*C13+CM18_3*S7-CM73_38*C7-CM93_310*C9-FM113_212*s.dpt(1,3)-FM73_28*...
 s.dpt(1,1)+s.dpt(2,2)*(FB110_3*C9+FM93_310*S9)+s.dpt(2,4)*(FB114_3*C13+FM133_314*S13));
  CM16_4 = s.In(1,6)*OpM16_4+s.In(2,6)*OpM26_4+s.In(3,6)*S5+s.m(6)*OpM16_4*s.l(3,6)*s.l(3,6)+CM110_4*C9+CM112_4*C11+CM114_312*S11+CM114_4*C13+...
 CM134_314*S13+CM18_4*C7+CM74_38*S7+CM94_310*S9-s.dpt(2,2)*(FB110_4*S9-FM94_310*C9)-s.dpt(2,4)*(FB114_4*S13-FM134_314*C13);
  CM26_4 = CM114_212+CM134_214+CM74_28+CM94_210+s.In(2,6)*OpM16_4+s.In(5,6)*OpM26_4+s.In(6,6)*S5+s.m(6)*OpM26_4*s.l(3,6)*s.l(3,6)+s.dpt(1,1)*(...
 FB18_4*S7-C7*(FB28_4*S8+FB38_4*C8))+s.dpt(1,3)*(FB112_4*S11-C11*(FB212_4*S12+FB312_4*C12));
  CM36_4 = s.In(3,6)*OpM16_4+s.In(6,6)*OpM26_4+s.In(9,6)*S5-CM110_4*S9-CM112_4*S11+CM114_312*C11-CM114_4*S13+CM134_314*C13-CM18_4*S7+CM74_38*C7+...
 CM94_310*C9+s.dpt(1,1)*(FB28_4*C8-FB38_4*S8)+s.dpt(1,3)*(FB212_4*C12-FB312_4*S12)-s.dpt(2,2)*(FB110_4*C9+FM94_310*S9)-s.dpt(2,4)*(FB114_4*C13+...
 FM134_314*S13);
  CM36_5 = s.In(3,6)*S6+s.In(6,6)*C6-CM110_5*S9-CM112_5*S11-CM114_5*S13+CM115_312*C11+CM135_314*C13-CM18_5*S7+CM75_38*C7+CM95_310*C9+s.dpt(1,1)*(...
 FB28_5*C8-FB38_5*S8)+s.dpt(1,3)*(FB212_5*C12-FB312_5*S12)-s.dpt(2,2)*(FB110_5*C9+FM95_310*S9)-s.dpt(2,4)*(FB114_5*C13+FM135_314*S13);
  CM36_6 = s.In(9,6)-CM110_6*S9-CM112_6*S11-CM114_6*S13-CM18_6*S7+s.dpt(1,1)*(s.m(8)*s.dpt(1,1)*S8*S8+FB28_6*C8)+s.dpt(1,3)*(s.m(12)*s.dpt(1,3)*...
 S12*S12+FB212_6*C12)-s.dpt(2,2)*(FB110_6*C9+S9*(s.m(10)*AlM39_6*C10*C10+FB210_6*S10))-s.dpt(2,4)*(FB114_6*C13+S13*(s.m(14)*AlM313_6*C14*C14+FB214_6*...
 S14))+C11*(CM212_6*S12+CM312_6*C12)+C13*(CM214_6*S14+CM314_6*C14)+C7*(CM28_6*S8+CM38_6*C8)+C9*(CM210_6*S10+CM310_6*C10);
  FF5_16 = FF16*C6-FF26*S6;
  FF5_26 = FF16*S6+FF26*C6;
  CF5_26 = CF16*S6+CF26*C6;
  FM51_16 = FM16_1*C6-FM26_1*S6;
  FM51_26 = FM16_1*S6+FM26_1*C6;
  CM51_26 = CM16_1*S6+CM26_1*C6;
  FM52_26 = FM16_2*S6+FM26_2*C6;
  CM52_26 = CM16_2*S6+CM26_2*C6;
  CM53_26 = CM16_3*S6+CM26_3*C6;
  CM54_26 = CM16_4*S6+CM26_4*C6;
  CM55_26 = C6*(CM115_212+CM135_214+CM75_28+CM95_210+s.In(2,6)*S6+s.In(5,6)*C6+s.m(6)*s.l(3,6)*s.l(3,6)*C6+s.dpt(1,1)*(FB18_5*S7-C7*(FB28_5*S8+...
 FB38_5*C8))+s.dpt(1,3)*(FB112_5*S11-C11*(FB212_5*S12+FB312_5*C12)))+S6*(s.In(1,6)*S6+s.In(2,6)*C6+s.m(6)*s.l(3,6)*s.l(3,6)*S6+CM110_5*C9+CM112_5*C11+...
 CM114_5*C13+CM115_312*S11+CM135_314*S13+CM18_5*C7+CM75_38*S7+CM95_310*S9-s.dpt(2,2)*(FB110_5*S9-FM95_310*C9)-s.dpt(2,4)*(FB114_5*S13-FM135_314*C13));
  FF4_15 = FF36*S5+FF5_16*C5;
  FF4_35 = FF36*C5-FF5_16*S5;
  CF4_15 = CF36*S5+C5*(CF16*C6-CF26*S6);
  FM41_15 = FM36_1*S5+FM51_16*C5;
  FM41_35 = FM36_1*C5-FM51_16*S5;
  CM41_15 = CM36_1*S5+C5*(CM16_1*C6-CM26_1*S6);
  FM42_35 = C5*(s.m(6)*AlM35_2-FB110_2*S9-FB112_2*S11-FB114_2*S13-FB18_2*S7+FM112_312*C11+FM132_314*C13+FM72_38*C7+FM92_310*C9)-S5*(FM16_2*C6-...
 FM26_2*S6);
  CM42_15 = CM36_2*S5+C5*(CM16_2*C6-CM26_2*S6);
  CM43_15 = CM36_3*S5+C5*(CM16_3*C6-CM26_3*S6);
  CM44_15 = CM36_4*S5+C5*(CM16_4*C6-CM26_4*S6);
  FF3_24 = -(FF4_35*S4-FF5_26*C4);
  FF3_34 = FF4_35*C4+FF5_26*S4;
  FM31_24 = -(FM41_35*S4-FM51_26*C4);
  FM31_34 = FM41_35*C4+FM51_26*S4;
  FM32_24 = -(FM42_35*S4-FM52_26*C4);
  FM32_34 = FM42_35*C4+FM52_26*S4;
  FM33_34 = C4*(C5*(s.m(6)*AlM35_3-FB110_3*S9-FB112_3*S11-FB114_3*S13-FB18_3*S7+FM113_312*C11+FM133_314*C13+FM73_38*C7+FM93_310*C9)-S5*(FM16_3*C6...
 -FM26_3*S6))+S4*(FM16_3*S6+FM26_3*C6);

% = = Block_0_3_0_0_0_0 = = 
 
% Symbolic Outputs  

  M(1,1) = FM41_15;
  M(1,2) = FM31_24;
  M(1,3) = FM31_34;
  M(1,4) = CM41_15;
  M(1,5) = CM51_26;
  M(1,6) = CM36_1;
  M(1,7) = CM71_28;
  M(1,8) = CM18_1;
  M(1,9) = CM91_210;
  M(1,10) = CM110_1;
  M(1,11) = CM111_212;
  M(1,12) = CM112_1;
  M(1,13) = CM131_214;
  M(1,14) = CM114_1;
  M(2,1) = FM31_24;
  M(2,2) = FM32_24;
  M(2,3) = FM32_34;
  M(2,4) = CM42_15;
  M(2,5) = CM52_26;
  M(2,6) = CM36_2;
  M(2,7) = CM72_28;
  M(2,8) = CM18_2;
  M(2,9) = CM92_210;
  M(2,10) = CM110_2;
  M(2,11) = CM112_212;
  M(2,12) = CM112_2;
  M(2,13) = CM132_214;
  M(2,14) = CM114_2;
  M(3,1) = FM31_34;
  M(3,2) = FM32_34;
  M(3,3) = FM33_34;
  M(3,4) = CM43_15;
  M(3,5) = CM53_26;
  M(3,6) = CM36_3;
  M(3,7) = CM73_28;
  M(3,8) = CM18_3;
  M(3,9) = CM93_210;
  M(3,10) = CM110_3;
  M(3,11) = CM113_212;
  M(3,12) = CM112_3;
  M(3,13) = CM133_214;
  M(3,14) = CM114_3;
  M(4,1) = CM41_15;
  M(4,2) = CM42_15;
  M(4,3) = CM43_15;
  M(4,4) = CM44_15;
  M(4,5) = CM54_26;
  M(4,6) = CM36_4;
  M(4,7) = CM74_28;
  M(4,8) = CM18_4;
  M(4,9) = CM94_210;
  M(4,10) = CM110_4;
  M(4,11) = CM114_212;
  M(4,12) = CM112_4;
  M(4,13) = CM134_214;
  M(4,14) = CM114_4;
  M(5,1) = CM51_26;
  M(5,2) = CM52_26;
  M(5,3) = CM53_26;
  M(5,4) = CM54_26;
  M(5,5) = CM55_26;
  M(5,6) = CM36_5;
  M(5,7) = CM75_28;
  M(5,8) = CM18_5;
  M(5,9) = CM95_210;
  M(5,10) = CM110_5;
  M(5,11) = CM115_212;
  M(5,12) = CM112_5;
  M(5,13) = CM135_214;
  M(5,14) = CM114_5;
  M(6,1) = CM36_1;
  M(6,2) = CM36_2;
  M(6,3) = CM36_3;
  M(6,4) = CM36_4;
  M(6,5) = CM36_5;
  M(6,6) = CM36_6;
  M(6,7) = CM76_28;
  M(6,8) = CM18_6;
  M(6,9) = CM96_210;
  M(6,10) = CM110_6;
  M(6,11) = CM116_212;
  M(6,12) = CM112_6;
  M(6,13) = CM136_214;
  M(6,14) = CM114_6;
  M(7,1) = CM71_28;
  M(7,2) = CM72_28;
  M(7,3) = CM73_28;
  M(7,4) = CM74_28;
  M(7,5) = CM75_28;
  M(7,6) = CM76_28;
  M(7,7) = CM77_28;
  M(8,1) = CM18_1;
  M(8,2) = CM18_2;
  M(8,3) = CM18_3;
  M(8,4) = CM18_4;
  M(8,5) = CM18_5;
  M(8,6) = CM18_6;
  M(8,8) = CM18_8;
  M(9,1) = CM91_210;
  M(9,2) = CM92_210;
  M(9,3) = CM93_210;
  M(9,4) = CM94_210;
  M(9,5) = CM95_210;
  M(9,6) = CM96_210;
  M(9,9) = CM99_210;
  M(10,1) = CM110_1;
  M(10,2) = CM110_2;
  M(10,3) = CM110_3;
  M(10,4) = CM110_4;
  M(10,5) = CM110_5;
  M(10,6) = CM110_6;
  M(10,10) = CM110_10;
  M(11,1) = CM111_212;
  M(11,2) = CM112_212;
  M(11,3) = CM113_212;
  M(11,4) = CM114_212;
  M(11,5) = CM115_212;
  M(11,6) = CM116_212;
  M(11,11) = CM1111_212;
  M(12,1) = CM112_1;
  M(12,2) = CM112_2;
  M(12,3) = CM112_3;
  M(12,4) = CM112_4;
  M(12,5) = CM112_5;
  M(12,6) = CM112_6;
  M(12,12) = CM112_12;
  M(13,1) = CM131_214;
  M(13,2) = CM132_214;
  M(13,3) = CM133_214;
  M(13,4) = CM134_214;
  M(13,5) = CM135_214;
  M(13,6) = CM136_214;
  M(13,13) = CM1313_214;
  M(14,1) = CM114_1;
  M(14,2) = CM114_2;
  M(14,3) = CM114_3;
  M(14,4) = CM114_4;
  M(14,5) = CM114_5;
  M(14,6) = CM114_6;
  M(14,14) = CM114_14;
  c(1) = FF4_15;
  c(2) = FF3_24;
  c(3) = FF3_34;
  c(4) = CF4_15;
  c(5) = CF5_26;
  c(6) = CF36;
  c(7) = CF7_28;
  c(8) = CF18;
  c(9) = CF9_210;
  c(10) = CF110;
  c(11) = CF11_212;
  c(12) = CF112;
  c(13) = CF13_214;
  c(14) = CF114;

% ====== END Task 0 ====== 

  

